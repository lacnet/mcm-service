<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>








    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>IM frame</title>
    <script type="text/javascript">
        // 
        function getUiWindow()
        {
            if(top.getUiWindow)
            {
                return top.getUiWindow();
            }
            else
            {
                return getUiFrame().contentWindow;
            }
        }
        
        function getUiFrame()
        {
            if(top.getUiFrame)
            {
                return top.getUiFrame();
            }
            else
            {
                return top.document.getElementById("UIFrame");
            }
        }
        
        function getUiFrameOrBody()
        {
            if(top.getUiFrameOrBody)
            {
                return top.getUiFrameOrBody();
            }
            else
            {
                return getUiFrame();
            }
        }
        // 
    
        // 
        function checkHostPage()
        {
            document.domain = "live.com";
            var mailUrlDomain = "mail.live.com";
            var hostname = "";
            try
            {
                
                hostname = window.top.location.hostname;
            }
            catch(e)
            {
                hostname = "";
            }
             var hasMailUrl = (hostname != "") &&
                (hostname.indexOf(mailUrlDomain) != -1) &&
                ((hostname.indexOf(mailUrlDomain) + mailUrlDomain.length) == hostname.length);

            if (!hasMailUrl)
            {
                var peopleUrlDomain = "people.live.com";    
                var hasPeopleUrl = (hostname != "") &&
                    (hostname.indexOf(peopleUrlDomain) != -1) &&
                    ((hostname.indexOf(peopleUrlDomain) + peopleUrlDomain.length) == hostname.length);
                    
                if (!hasPeopleUrl)
                {
                    document.domain = self.location.hostname;
                    return false;
                }
            }
            return true;
       }
       checkHostPage();
       
       function getImage(img, isIMSpecific)
        {
            /// 
            var imageServer = "http://gfx2.hotmail.com/mail/w4/pr01/ltr/";
            if (isIMSpecific === true)
            {
                return (imageServer + "im/" + img);
            }
            else
            {
                return (imageServer + img);
            }
        }
        function isDebug()
        {
            /// 
        
            return false;
        
        }

        // 
        function WAssert(condition, message)
        {

        }

        function onErrorHandler(errorMsg, pageUrl, line)
        {

            return true;

        }
        window.onerror = onErrorHandler;
        
        // 
        var entityList = new Array();
        entityList["<"]        = "&lt;";
        entityList["\uff1c"]   = "&lt;";
        entityList[">"]        = "&gt;";
        entityList["\uff1e"]   = "&gt;";
        entityList["&"]        = "&amp;";
        entityList["\uff06"]   = "&amp;";
        entityList["\""]       = "&quot;";
        entityList["\uff02"]   = "&quot;";
        var gCid = "7453627813241164856";
        
        //
        var __messengerScriptPath = "http://gfx6.hotmail.com/mail/15.1.3023.1012/";
        
        //
        var gBeaconSrc = "http://h.msn.com/c.gif?";
        var gInstrumentImgSrc = 'http://h.msn.com/c.gif?RF=&PI=44397&DI=5722&PS=';

        // 
        var gBeaconImg = null;

        // 
        var gInstrumentImg = null;
        
        function raiseBeacon(args)
        {
            /// 

        }
           
        function sendInstrumentation(psValue)
        {
            /// 

            if (gInstrumentImg == null)
            {
                gInstrumentImg = document.getElementById("instrumentImg");
            }
            
            if (gInstrumentImg && psValue)
            {
                gInstrumentImg.removeAttribute("src");
                gInstrumentImg.setAttribute("src",  (gInstrumentImgSrc  + psValue));
            }

        }


        //
        var gLoaderIsIE = false;
        var gScriptUrls = [];
        var gDownloadSchedulePeriod = 5000;
        var gBusyTimeoutPeriod = (gDownloadSchedulePeriod * 12); // 
        var gButtonTextLength = parseFloat('84px');
    </script>
    



<script type="text/javascript">
        var True = true;
        var False = false;
        var gGroupPawn = 'http://gfx1.hotmail.com/mail/w4/pr01/ltr/im/webim16_wp.gif';
        var gGroupPDP = 'http://gfx1.hotmail.com/mail/w4/pr01/ltr/im/groupPDP.gif';
        var gMarket = "fr-fr";
        var gStylesLoaded = true;    
        var gUserHash = '141B3FFA02A78A11E076B5DDB42D9D73';
        function isDebug()
        {
            return (False);
        }
                
        var eventData = {}; 
        function ClearEventData()
        {
            var doCancel = false;
            
            if(eventData.cancel)
                doCancel = true;

            eventData = {
                handled : false,
                cancel : false
            };
            
            event.returnValue = !doCancel;
            
            return !doCancel;
        }

        ClearEventData.Events = ['onkeydown', 'onkeyup', 'onkeypress' ,
                          'onmousedown', 'onmouseup', 'onclick',
                          'onmouseover', 'onmousemove', 'onmouseout',
                          'onfocusin', 'onfocusout'];

 </script>

    

    <script type="text/javascript">
        WebIMStrings = function WebIMStrings()
        {
            /// <summary>A class meant to be used as a singleton, that basically is the resource object for strings</summary>
        }
        WebIMStrings.prototype = 
        {
            CW_Contact_EmailNotVerified : 'Adresse de messagerie non v\u00e9rifi\u00e9e',
            CW_Unblock_Tooltip : 'Autoriser ce contact \u00e0 vous voir et \u00e0 vous contacter',
            CW_Block_Tooltip : 'Emp\u00eacher ce contact de vous voir ou de vous contacter',
            CW_CreditCardWarning : 'Ne communiquez jamais votre mot de passe ou votre num\u00e9ro de carte bancaire dans une conversation sur messagerie instantan\u00e9e.',
            Notification_NewMessage : 'J\x27ai re\u00e7u un nouveau message.',
            CW_Status_TypingIndicator : '\x7b0\x7d est en train d\x27\u00e9crire.',
            CW_Nudge_Sent : 'Vous avez envoy\u00e9 un wizz.',
            CW_Nudge_Received : '\x7b0\x7d vous a envoy\u00e9 un wizz.',
            InfoPane_Warning_Tooltip : 'Avertissement',
            InfoPane_Info_Tooltip : 'Pour information',
            WCLResultCode_UnexplainableError : 'Il est impossible d\x27effectuer cette t\u00e2che pour le moment. R\u00e9essayez plus tard.',
            CW_Send_Error : 'Impossible d\x27envoyer votre message ci-dessous.',
            SendButton_Tooltip : 'Envoyer le message',
            Buddy_Status_Blocked : 'Bloqu\u00e9',
            Buddy_Status_Offline : 'Hors ligne',
            Buddy_Status_Online : 'Disponible',
            Buddy_Status_Hidden : 'Hors ligne',
            Buddy_Status_Busy : 'Occup\u00e9',
            Buddy_Status_Idle : 'Inactif',
            Buddy_Status_BeRightBack : 'De retour dans quelques minutes',
            Buddy_Status_Away : 'Absent',
            Buddy_Status_OnThePhone : 'Au t\u00e9l\u00e9phone',
            Buddy_Status_OutToLunch : 'Parti manger',
            CW_DisplayPicture_Tooltip : 'Image perso de \x7b0\x7d',
            CW_Infotip_Blocked : 'Vous ne pouvez ni envoyer ni recevoir de message de \x7b0\x7d car vous avez bloqu\u00e9 ce contact.',
            CW_Infotip_NotInList_Message : '\x7b0\x7d ne figure pas dans votre liste de contacts.',
            CW_Infotip_BackOnline : '\x7b0\x7d est \u00e0 nouveau disponible.',
            CW_Infotip_Offline_Message : '\x7b0\x7d est hors ligne.',
            CW_Infotip_Busy : '\x7b0\x7d est occup\u00e9\x28e\x29 et risque de ne pas r\u00e9pondre.',
            CW_Infotip_Away : '\x7b0\x7d est absent et risque de ne pas r\u00e9pondre.',
            CW_Infotip_BeRightBack : '\x7b0\x7d risque de ne pas r\u00e9pondre parce que son statut est De retour dans quelques minutes.',
            CW_Infotip_IsInCall : '\x7b0\x7d est au t\u00e9l\u00e9phone et risque de ne pas r\u00e9pondre.',
            CW_Infotip_Offline_EmailLink : 'Envoyer un message \u00e9lectronique \u00e0 ce contact',
            CW_Infotip_OutToLunch : '\x7b0\x7d est parti\x28e\x29 manger et risque de ne pas r\u00e9pondre.',
            CW_Infotip_NotInList_AddNowLink : 'L\x27ajouter \u00e0 votre liste de contacts',
            CW_Infotip_Self : 'Vous avez une conversation avec vous-m\u00eame.',
            CW_AppearingOffline : 'Votre statut est \x22Hors ligne\x22. Vous pouvez communiquer avec vos contacts, mais ils sauront que vous \u00eates connect\u00e9.',
            CW_Infotip_Unblocked : 'Vous avez autoris\u00e9 \x7b0\x7d et pouvez d\u00e9sormais lui envoyer des messages et recevoir les siens.',
            CW_ContactJoined : '\x7b0\x7d a \u00e9t\u00e9 ajout\u00e9 \u00e0 cette conversation',
            CW_ContactLeft : '\x7b0\x7d a quitt\u00e9 la conversation.',
            CW_ParticipantCount : '\x7b0\x7d participants',
            CW_Status_Day : 'jour',
            CW_Status_Days : 'jours',
            CW_Status_Hour : 'heure',
            CW_Status_Hours : 'heures',
            CW_Status_Minute : 'minute',
            CW_Status_Minutes : 'minutes',
            CW_Status_Month : 'mois',
            CW_Status_Months : 'mois',
            CW_Status_Second : 'seconde',
            CW_Status_Seconds : 'secondes',
            CW_Status_Week : 'semaine',
            CW_Status_Weeks : 'semaines',
            CW_Status_Year : 'an',
            CW_Status_Years : 'ans',
            CW_Status_LastMessageReceivedAgo : 'Dernier message re\u00e7u il y a \x7b0\x7d et \x7b1\x7d.',
            CW_Status_LastMessageReceivedAgoOnlyOne : 'Dernier message re\u00e7u il y a \x7b0\x7d.',
            CW_History_Says : 'dit',
            Actionbar_Accessibility_CloseAlt : 'Fermer',
            Actionbar_Accessibility_OpenAlt : 'Ouvrir',
            CW_ThereAreOpenConversations : 'Vous \u00eates sur le point de vous d\u00e9connecter de Messenger. Toutes les conversations en cours vont \u00eatre ferm\u00e9es.',
            CW_ThereAreNoOpenConversations : 'Votre session Messenger sera perdue.',
            CW_Popout_Error : 'Un probl\u00e8me s\x27est produit au moment du passage de cette conversation dans une fen\u00eatre distincte. D\u00e9sactivez votre bloqueur de fen\u00eatres popup et r\u00e9essayez.',
            CW_PopoutError_Title : 'Erreur au moment de l\x27isolement de la conversation dans une autre fen\u00eatre',
            CW_Writing : 'En train de composer un message \x3a \x7b0\x7d',
            Group_CloseDialog_Text : 'Vous quittez cette conversation. Vous ne recevrez plus de messages instantan\u00e9s de cette session.',
            Group_CloseDialog_Title : 'Vous quittez une conversation \u00e0 plusieurs',
            PageTitleServiceName : 'Messenger',
            MaxMPOP_SignedOut : 'Comme vous \u00eates connect\u00e9 \u00e0 \x7b0\x7d endroits diff\u00e9rents, nous avons d\u00fb vous d\u00e9connecter ici',
            SignedOutFromElsewhere : 'Un des endroits o\u00f9 vous \u00e9tiez connect\u00e9 \u00e0 Messenger vous a d\u00e9connect\u00e9 de cet endroit',
            NewSignIn : 'Vous \u00eates maintenant connect\u00e9 \u00e0 \x7b0\x7d endroits. Les messages appara\u00eetront dans tous ces endroits.',
            SignoutEverywhere : 'Se d\u00e9connecter partout \x28\x7b0\x7d endroits\x29',
            SignInButton : 'Messenger',
            SignInMenu : 'Se connecter \u00e0 Messenger \x28Web\x29',
            SignInAlways : 'Se connecter automatiquement depuis cet endroit',
            SignOut : 'Se d\u00e9connecter de Messenger \x28Web\x29',
            ViewBuddies : 'Afficher les contacts en ligne',
            SigningIn : 'Connexion...',
            SignInFailure : 'Probl\u00e8me de connexion \u00e0 Messenger. R\u00e9essayez plus tard.',
            SignInToChat : 'Pour envoyer des messages instantan\u00e9s, connectez-vous \u00e0 Messenger sur le Web. Messenger se trouve dans la barre d\x27action. Cliquez dessus pour le lancer.',
            PopoutFailure : 'Un probl\u00e8me s\x27est produit lors de l\x27ouverture de cette conversation. Essayez de changer les param\u00e8tres de votre bloqueur de fen\u00eatres publicitaires et r\u00e9essayez. Si cela ne marche pas, r\u00e9essayez plus tard.',
            PS_SignIn : '96795',
            PS_SignInFailure : '97254',
            PS_ChatOut : '96797',
            PS_RespondToChat : '96798',
            BuddyList_Title : 'Contacts en ligne',
            BuddyList_NoBuddies : 'Aucun de vos contacts n\x27est en ligne. Voulez-vous \x7b0\x7d \x3f',
            BuddyList_SendMail : 'envoyer un message \u00e9lectronique',
            BuddyList_Error : 'Un probl\u00e8me s\x27est produit pendant l\x27affichage de votre liste de contacts. R\u00e9essayez plus tard.',
            PS_BuddyList_ViewOnlineContactsClicked : '97800',
            PS_BuddyList_BuddyClicked : '97801',
            PS_BuddyList_CloseClicked : '97802',
            WebIMGenericSignOutError : 'Le service Messenger a subi des probl\u00e8mes temporaires de connexion r\u00e9seau sans rapport avec votre ordinateur. Veuillez r\u00e9essayer.'
        };
        var gStrings = new WebIMStrings();
    </script>

    


    

        
        <script type="text/javascript">
            gScriptUrls.push('http://gfx6.hotmail.com/mail/15.1.3023.1012/im0af.js');
        
            // 
            gScriptUrls.push("http://gfx6.hotmail.com/mail/15.1.3023.1012/Microsoft.Live.Messenger.Model.Internal.js");
            gScriptUrls.push("http://gfx6.hotmail.com/mail/15.1.3023.1012/Microsoft.Live.Messenger.Services.Core.js");
            gScriptUrls.push("http://gfx6.hotmail.com/mail/15.1.3023.1012/Microsoft.Live.Messenger.Services.AddressBook.js");
            gScriptUrls.push("http://gfx6.hotmail.com/mail/15.1.3023.1012/Microsoft.Live.Messenger.Services.Chat.js");
            gScriptUrls.push("http://gfx6.hotmail.com/mail/15.1.3023.1012/Microsoft.Live.Messenger.Services.Configuration.js");
            gScriptUrls.push("http://gfx6.hotmail.com/mail/15.1.3023.1012/Microsoft.Live.Messenger.Services.ExpressionProfile.js");
            gScriptUrls.push("http://gfx6.hotmail.com/mail/15.1.3023.1012/Microsoft.Live.Messenger.Services.Identity.js");
            
            //             
            gScriptUrls.push("http://gfx6.hotmail.com/mail/15.1.3023.1012/im0i.js");
            gScriptUrls.push("http://gfx6.hotmail.com/mail/15.1.3023.1012/im0j.js");
            gScriptUrls.push("http://gfx6.hotmail.com/mail/15.1.3023.1012/im0k.js");
            gScriptUrls.push("http://gfx6.hotmail.com/mail/15.1.3023.1012/im0l.js");
        </script>
   
    
    <script type="text/javascript">
    
        var gTrace = "";
        function traceLoader(line)
        {
            /// 

            line = [gTrace, "<div>", ((new Date()).toLocaleString()),  ": ",  line, "</div>"].join("");
            gTrace = line;
        }
         
        function saveLoaderTrace()
        {
            /// 
            if (gTrace != "")
            {
                var trace = document.getElementById("trace");
                trace.innerHTML = trace; // save the trace, if any
                trace = null;
            }
        }
           
        function LoaderOnScriptLoaded()
        {
            /// 
    
            if (gLoader)
            {
                gLoader.onScriptLoaded(this);
            }
            
        }
        
        var Loader = function Loader$(scriptUrls)
        {
            /// 

            this._head = document.getElementsByTagName("HEAD")[0];
            this._scriptUrls = scriptUrls;
            this._ctScripts = scriptUrls.length;
        }
        
        Loader.prototype = 
        {
            _scriptUrls : [],
            _attachQueue : [],
            _ctLoaded : 0,
            _head : null,
            _ctScripts : 0,
            _current : -1,
            _isDone : false,
            _isIdle : true,
            _nowDownloading : null,
                    
            onScriptLoaded: function Loader$onScriptLoaded(el)
            {
                /// 
                this._nowDownloading = null;
                if(el && (("loaded" === el.readyState) || ("complete" === el.readyState)))
                {
                    traceLoader("onScriptLoaded: " + el.src + " has been loaded");
                    if(gLoaderIsIE)
                    {
                        el.onreadystatechange = null;
                    }
                    else
                    {
                        el.onload = el.onerror = null;
                    }
                    el = null;
                }

                ++this._ctLoaded;
                traceLoader("onScriptLoaded: Loaded count: " + this._ctLoaded);
                //Determine if all resources are downloaded before calling
                //callback. In some cases script depends on css being present
                //(contact picker, rte) so only callback after all are down.
                this._isDone = (this._ctLoaded == this._ctScripts);
                if (this._isDone)
                {
                    traceLoader("onScriptLoaded: Done");
                    if(gLoaderIsIE)
                    {
                        var attachCt = this._attachQueue.length;
                        var attachIdx;
                        for(attachIdx = 0; attachIdx < attachCt; ++attachIdx)
                        {
                            this._head.appendChild(this._attachQueue[attachIdx]);
                        }
                        this._attachQueue = null;
                    }
                    onAllScriptsLoaded();
                }
                this._isIdle = true;
                if (!this._isDone)
                {
                    checkForIdle();
                }
            },
            
            isDone: function Loader$isDone()
            {
                /// 

                return this._isDone;
            },
            
            isIdle: function Loader$isIdle()
            {
                /// 

                return this._isIdle;
            },
            
            loadNextScript: function Loader$loadNextScript()
            {
                /// 

                this._current++;
                if (this._current >= this._ctScripts)
                {
                    return false;    
                }
                else
                {
                    var url = this._scriptUrls[this._current];
                    traceLoader("onScriptLoaded: Loading: " + url);
                    this._isIdle = false;
                    this._loadScript(url);
                    return true;
                }
            },
            
            _loadScript : function Loader$_loadScript(url)
            {
                /// 

                var el = document.createElement("script");
                el.type = "text/javascript";
                if(gLoaderIsIE)
                {
                    this._attachQueue.push(el);
                    el.onreadystatechange=  LoaderOnScriptLoaded;
                    el.src = url;
                }
                else
                {
                    el.onload = LoaderOnScriptLoaded;
                    el.onerror = LoaderOnScriptLoaded;
                    el.readyState = "complete";
                    el.src = url;
                    //
                    this._head.appendChild(el);
                }
                this._nowDownloading = el;
            },
            
            attachHandle: function Loader$attachHandle(element, eventName, handler)
            {
                /// 
            
                if (element)
                {
                    if (gLoaderIsIE)
                    {
                        element.attachEvent(("on" + eventName), handler);
                    }
                    else
                    {
                        element.addEventListener(eventName, handler, false);
                    }
                }
            },
            
            detachHandle: function Loader$detachHandle(element, eventName, handler)
            {
                /// 

                if (element)
                {
                    if (gLoaderIsIE)
                    {
                        element.detachEvent(("on" + eventName), handler);
                    }
                    else
                    {
                        element.removeEventListener(eventName, handler, false);
                    }
                }
            },
            
            dispose: function Loader$dispose()
            {
                this._scriptUrls = null;
                this._attachQueue = null;
                this._nowDownloading = null;
                this._isDone = true;
                this._isIdle = false;
            }
        }
        
        // 
        var gUIFrame = null;
        
        // 
        var gLoader = null;

        // 
        var gUIIdle = true;


        // 
        var gUIWasLastIdle = true;

        // 
        var gCheckForIdleIntervalID = 0;

        // 
        var gUIFrameLoadAttached = false;
        
        // 
        var gBusyTimeoutID = 0;

        function markBusy()
        {
            /// 

            traceLoader("markBusy called");
            try
            {
                if (this)
                {
                    gLoader.detachHandle(this, "beforeunload", markBusy);
                }
            }
            catch(e)
            {
            }

            // 
            if (gBusyTimeoutID != 0)
            {
                clearTimeout(gBusyTimeoutID);
                gBusyTimeoutID = 0;
            }
            gBusyTimeoutID = setTimeout(markIdle, gBusyTimeoutPeriod);

            // 
            gUIIdle = false;
            
        }
        
        function markIdle()
        {
            /// 

            traceLoader("markIdle called");
            if (gUIFrame)
            {
                try
                {
                    var win = getUiWindow();
                    if (win)
                    {
                        gLoader.attachHandle(win, "beforeunload", markBusy);
                    }
                }
                catch(e)
                {
                }
            }
            if (gBusyTimeoutID != 0)
            {
                clearTimeout(gBusyTimeoutID);
                gBusyTimeoutID = 0;
            }
            gUIIdle = true;
        }
        
        function checkForIdle()
        {
            /// 

            traceLoader(["checkForIdle: Done: ", gLoader.isDone(),  " UIWasLastIdle: ", gUIWasLastIdle, " UIIdle: ", gUIIdle,
             " Loader Idle: ", gLoader.isIdle()].join(""));
            if (gLoader.isDone())
            {
                if (gCheckForIdleIntervalID != 0)
                {
                    clearInterval(gCheckForIdleIntervalID);
                    gCheckForIdleIntervalID = 0;
                }
            }
            else if (gUIIdle && gLoader.isIdle() && gUIWasLastIdle)
            {
                gLoader.loadNextScript();
            }
            gUIWasLastIdle = gUIIdle;
        }
        
        function onAllScriptsLoaded()
        {
            /// 

            traceLoader("onAllScriptsLoaded: Done: " + gLoader.isDone());

            if (gLoader.isDone())
            {
                gLoader.detachHandle(gUIFrame, "load", markIdle);
                gUIFrameLoadAttached = false;
                saveLoaderTrace();
                raiseBeacon("wlm=webimdone");
                // 
                MSCo.Configuration.set_environment(MSCo.Environment.production);
                // 
                initializeApp();
            }
        }
        
        function OnLoad()
        {
            /// 

            try
            {
                if (!gUIFrame)
                {
                    updateUIFrameRef();
                }
            }
            catch(e)
            {
                if (!gUIFrame)
                {
                    setTimeout(OnLoad, gDownloadSchedulePeriod);
                    return;
                }
            }

            traceLoader("OnLoad: starting...");
            raiseBeacon("wlm=webimstart");
            gLoader = new Loader(gScriptUrls);
            if (gUIFrame)
            {
                gLoader.attachHandle(gUIFrame, "load", markIdle);
                gUIFrameLoadAttached = true;
            }
            gCheckForIdleIntervalID = setInterval(checkForIdle, gDownloadSchedulePeriod);
        }
    </script>
    
    <script type="text/javascript">
        // 
        var gWebIM = null;
        var gImClient = null;
        var gUser = 'micke_lorry\x40hotmail.com';
        var gDebugMessager = null;
        var gImUI = null;
        var gToastManager = null;
        var gBuddyListManager = null;
        var gIsAutoSignIn = false;

        function initializeApp()
        {
            /// 

            // 
            gDebugMessager = new MailIM.DebugMessager();
            initializeFlashUI(); // for sounds
            gWebIM = new MailIM.WebIM();
            gImClient = new MailIM.ImClient();
            gImUI = new MailIM.ImUI();
            gBuddyListManager = new MailIM.BuddyListManager();
            gToastManager = new MailIM.ToastManager();
            window.attachEvent('onbeforeunload', OnBeforeUnload);
            connectWith();
            gLoader.attachHandle(getUiFrame(), "load", connectWith);
        }
        
        function updateUIFrameRef()
        {
            gUIFrame = getUiFrameOrBody();
        }
        
        function connectWith()
        {
            /// 

            gImUI.connectWith(gUIFrame);
        }
        
        
        function OnBeforeUnload()
        {
            /// 

            if (gWebIM.isSignedIn())
            {
                var chatManager = gWebIM.get_chatManager();
                if (chatManager.hasOpenConversations())
                {
                    window.event.returnValue = gStrings.CW_ThereAreOpenConversations;
                }
            }
        }

        function OnUnload()
        {
            /// 
            
            gLoader.detachHandle(gUIFrame, "load", connectWith);
            window.detachEvent('onbeforeunload', OnBeforeUnload);
            if (gImUI)
            {
                gImUI.dispose();
                gImUI = null;
            }
            if (gImClient)
            {
                gImClient.dispose();
                gImClient = null;
            }
            if (gWebIM)
            {
                gWebIM.dispose();
                gWebIM = null;
            }
            if (gDebugMessager)
            {
                gDebugMessager.dispose();
                gDebugMessager = null;
            }
            if (gToastManager)
            {
                gToastManager.dispose();
                gToastManager = null;
            }
            if (gBuddyListManager)
            {
                gBuddyListManager.dispose();
                gBuddyListManager = null;
            }
            if (gUIFrameLoadAttached)
            {
                gLoader.detachHandle(gUIFrame, "load", markIdle);
                gUIFrameLoadAttached = false;
            }
            if (gLoader)
            {
                gLoader.dispose();
                gLoader = null;
            }

            gUser = null;
            gUIFrame = null;
            gBeaconImg = null;
            gInstrumentImg = null;
        }

         var protocol = location.protocol;
         var baseUrl = location.host;
         var gToastFullModel = {
            id: "IMToastFull",
            frameBorder : "0",
            marginheight : "0",
            marginwidth : "0",
            style : "height:8em;width:13.4em;position:absolute;bottom:2px;right:2px;display:none;border:2px solid #CCCCCC; font-size: medium;",
            src : [protocol, "//", baseUrl, "/im/pages/ToastFull.aspx"].join("")
            };  

         var gToastMiniModel = {
            id: "IMToastMini",
            frameBorder : "0",
            marginheight : "0",
            marginwidth : "0",
            style : "height:1.5em;width:13.4em;position:absolute;bottom:2px;right:2px;display:none;border:1px solid #CCCCCC; font-size: medium;",
            src : [protocol, "//", baseUrl, "/im/pages/ToastMini.aspx"].join("")
        };
         var gBuddyListModel = {
            id: "IMBuddyList",
            frameBorder : "0",
            marginheight : "0",
            marginwidth : "0",
            style : "height:20em;width:17em;position:absolute;top:80px;right:130px;display:none;border:1px solid #CCCCCC; font-size: medium; z-index:5;",
            src : [protocol, "//", baseUrl, "/im/pages/BuddyList.aspx"].join("")
        };
         var gBuddyListDropShadowModel = {
            style : "height:20em;width:17em;position: absolute;top:85px;right:127px;display:none; background-color: rgb(0, 0, 0); opacity: 0.3; filter: alpha(opacity = 30); font-size: medium; z-index:4;",
            id: "IMBuddyListShadow"
        };
    </script>
<script charset="utf-8" id="injection_graph_func" src="081217_fichiers/injection_graph_func.js"></script><link href="081217_fichiers/skypeplugin_dropdownmenu.css" type="text/css" rel="stylesheet" charset="utf-8" id="_skypeplugin_dropdownmenu_css"><script src="BuddyList_data/im0af.js" type="text/javascript"></script><script src="im_data/Microsoft_003.js" type="text/javascript"></script><script src="im_data/Microsoft_005.js" type="text/javascript"></script><script src="im_data/Microsoft_005.js" type="text/javascript"></script><script src="im_data/Microsoft_007.js" type="text/javascript"></script><script src="im_data/Microsoft_004.js" type="text/javascript"></script><script src="im_data/Microsoft_002.js" type="text/javascript"></script><script src="im_data/Microsoft_006.js" type="text/javascript"></script><script src="im_data/Microsoft.js" type="text/javascript"></script><script src="im_data/im0i.js" type="text/javascript"></script><script src="im_data/im0j.js" type="text/javascript"></script><script src="im_data/im0k.js" type="text/javascript"></script><script src="im_data/im0l.js" type="text/javascript"></script><script id="_nameHighlight_injection"></script><link class="skype_name_highlight_style" href="081217_fichiers/injection_nh_graph.css" type="text/css" rel="stylesheet" charset="utf-8" id="_injection_graph_nh_css"></head><body onload="OnLoad();" onunload="OnUnload();">
    <div id="SavedHistory" style="display: none;"></div>
    
    <div id="flashSoundDiv"></div>
    <div id="trace" style="display: none;">[object HTMLDivElement]</div> 
    <img id="wlmPerfBeacon" alt="" name="" width="1" height="1">
    <img id="instrumentImg" alt="" name="" width="1" height="1">
    

    <li id="WebIMOptionsMenu" class="ToolbarItem FloatRight c_mcp" style="text-align: center;">
        <a id="WebIMOptionsMenuButton" href="javascript:;" class="c_ml" onclick="try{top.document.getElementById('IMFrame').contentWindow.setOnlineContactsBuddyList(document.getElementById('WebIMViewBuddiesNumber'));}catch(e){};try{$menu.bind(event,1,3,1);}catch(e){};return false;">
            <img src="im_data/online16_wp.gif" alt="Disponible" title="Disponible" border="0">&nbsp;<span style="overflow: hidden; display: -moz-inline-box; white-space: nowrap; max-width: 84px;">Disponible</span>
            <span class="c_chev">▼</span>
        </a>
        <ul class="c_m">
            <li>
                <a id="WebIMStatusOnline" href="javascript:;" value="online" menuid="WebIMOptionsMenuButton" text="Disponible" onclick="try {top.document.getElementById('IMFrame').contentWindow.UIStatusChange(document.getElementById('WebIMStatusOnline'));}catch(e){};return false;">
                        <img src="im_data/online16.png" style="position: relative; top: 4px;" border="0">&nbsp;Disponible
                </a>
            </li>
            <li>
                <a id="WebIMStatusBusy" href="javascript:;" value="busy" menuid="WebIMOptionsMenuButton" text="Occupé" onclick="try {top.document.getElementById('IMFrame').contentWindow.UIStatusChange(document.getElementById('WebIMStatusBusy'));}catch(e){};return false;">
                        <img src="im_data/busy16.png" style="position: relative; top: 4px;" border="0">&nbsp;Occupé
                 </a>
            </li>
            <li>
                <a id="WebIMStatusAway" href="javascript:;" value="away" menuid="WebIMOptionsMenuButton" text="Absent" onclick="try {top.document.getElementById('IMFrame').contentWindow.UIStatusChange(document.getElementById('WebIMStatusAway'));}catch(e){};return false;">
                        <img src="im_data/away16.png" style="position: relative; top: 4px;" border="0">&nbsp;Absent
                </a>
            </li>
            <li>
                <a id="WebIMStatusAppearOffline" href="javascript:;" value="appearOffline" menuid="WebIMOptionsMenuButton" text="Hors ligne" onclick="try {top.document.getElementById('IMFrame').contentWindow.UIStatusChange(document.getElementById('WebIMStatusAppearOffline'));}catch(e){};return false;">
                        <img src="im_data/offline16.png" style="position: relative; top: 4px;" border="0">&nbsp;Hors ligne
                </a>
                <div class="c_ms"></div>
            </li>
            <li><a id="WebIMViewBuddies" href="javascript:;" menuid="WebIMOptionsMenuButton" onclick="try {top.document.getElementById('IMFrame').contentWindow.UIViewBuddies(document.getElementById('WebIMViewBuddies'));}catch(e){};return false;">
                        <img src="im_data/online16.png" style="visibility: hidden;" border="0">&nbsp;Afficher les contacts en ligne
                        <span id="WebIMViewBuddiesNumber"></span>
                </a>
                <div class="c_ms"></div>
            </li>
            <li>
                <a id="WebIMSignOut" href="javascript:;" menuid="WebIMOptionsMenuButton" onclick="try {top.document.getElementById('IMFrame').contentWindow.UISignOut(document.getElementById('WebIMSignOut'));}catch(e){};return false;">
                        <img src="im_data/online16.png" style="visibility: hidden;" border="0">&nbsp;Se déconnecter de Messenger (Web)
                </a>
            </li><li id="WebIMSignOutEverywhereLI" style="display: none;">
                <a id="WebIMSignOutEverywhere" href="javascript:;" menuid="WebIMOptionsMenuButton" onclick="try {top.document.getElementById('IMFrame').contentWindow.UISignOut(document.getElementById('WebIMSignOutEverywhere'));}catch(e){};return false;">
                    <img src="im_data/online16.png" style="visibility: hidden;" border="0">&nbsp;<span id="WebIMSignoutEverywhereText">Se déconnecter partout ({0} endroits)</span>
                </a>
                <div class="c_ms"></div>
            </li><li><a id="WebIMReportAbuse" href="javascript:;" menuid="WebIMOptionsMenuButton" onclick="try {top.document.getElementById('IMFrame').contentWindow.UIReportAbuse(document.getElementById('WebIMReportAbuse'));}catch(e){};return false;">
                        <img src="im_data/online16.png" style="visibility: hidden;" border="0">&nbsp;Signaler un abus
                </a>
            </li>
        </ul>
    </li>
    <li id="WebIMSignInMenu" class="ToolbarItem FloatRight c_mcp">
            <a id="WebIMSignInMenuButton" href="javascript:;" class="c_ml" onclick="try{$menu.bind(event,1,3,1);}catch(e){};return false;">
            <img id="WebIMSignInButtonIcon" src="TodayLight_data/webim16_wp.gif" alt="Messenger" title="Messenger" style="vertical-align: top;" border="0">&nbsp;<span id="WebIMSignInButtonText" style="overflow: hidden; display: -moz-inline-box; white-space: nowrap; max-width: 84px;">Messenger</span>
            <span class="c_chev">▼</span>
        </a>
        <ul class="c_m">
            <li id="WebIMViewClientBuddiesLI" style="display: none;">
                <a id="WebIMViewClientBuddies" onclick="try {top.document.getElementById('IMFrame').contentWindow.UIViewClientBuddies(document.getElementById('WebIMViewClientBuddies'));}catch(e){};return false;" menuid="WebIMSignInMenuButton" href="javascript:;">
                     &nbsp;Afficher les contacts en ligne
                </a>
                <div class="c_ms"></div>
            </li>
            <li>
                <a id="WebIMSignIn" onclick="try {top.document.getElementById('IMFrame').contentWindow.UISignIn(document.getElementById('WebIMSignIn'));}catch(e){};return false;" menuid="WebIMSignInMenuButton" href="javascript:;">
                    &nbsp;Se connecter à Messenger (Web)
                </a>
            </li>
            <li>
                <a id="WebIMSignInAlways" onclick="try {top.document.getElementById('IMFrame').contentWindow.UISignIn(document.getElementById('WebIMSignInAlways'));}catch(e){};return false;" menuid="WebIMSignInMenuButton" href="javascript:;">
                    &nbsp;Se connecter automatiquement depuis cet endroit
                </a>
            </li>
        </ul>
    </li>
</body></html>