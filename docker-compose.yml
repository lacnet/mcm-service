# Mongo docker image
version: '3.9'
services:
  mcm-service:
    image: lacnet/mcm-service:1.0.0
    container_name: ${SPRING_APPLICATION_NAME}
    ports:
      - '8080:8080'
    environment:
      - SERVER_PORT=8080
      - SPRING_APPLICATION_NAME=mcm-service
      - SPRING_PROFILES_ACTIVE=production
      - MONGO_HOST=mcm-service-mongo
      - MONGO_PORT=27017
      - MONGO_DATABASE=mcm
      - MONGO_USER=devMongoRootUser
      - MONGO_PASSWORD=devMongoRootPassword
    depends_on:
      - mcm-service-mongo
  mcm-service-mongo:
    image: mongo
    container_name: 'mcm-service-mongo'
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - ./.docker/mongodb/data/db/:/data/db/
  mcm-service-mongo-express:
    image: mongo-express
    container_name: 'mcm-service-mongo-express'
    ports:
      - '8081:8081'
    environment:
     - ME_CONFIG_MONGODB_SERVER=${MONGO_HOST}
     - ME_CONFIG_MONGODB_PORT=${MONGO_PORT}
     - ME_CONFIG_MONGODB_AUTH_USERNAME=${MONGO_ROOT_USER}
     - ME_CONFIG_MONGODB_AUTH_PASSWORD=${MONGO_ROOT_PASSWORD}
    depends_on:
      - mcm-service-mongo
    restart: always
  mcm-service-postgres:
    image: postgres:10
    container_name: 'mcm-service-postgres'
    ports:
      - '5432:5432'
  mcm-service-mysql:
    image: mysql
    container_name: mcm-service-mysql
    volumes:
      - ./.docker/mysql/:/var/lib/mysql/
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8